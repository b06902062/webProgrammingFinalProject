[{"C:\\webprog20fall\\webProgrammingFinalProject\\src\\index.js":"1","C:\\webprog20fall\\webProgrammingFinalProject\\src\\reportWebVitals.js":"2","C:\\webprog20fall\\webProgrammingFinalProject\\src\\App.js":"3","C:\\webprog20fall\\webProgrammingFinalProject\\src\\useCanvas.js":"4","C:\\webprog20fall\\webProgrammingFinalProject\\src\\buttonList.js":"5","C:\\webprog20fall\\webProgrammingFinalProject\\src\\useGridCanvas.js":"6","C:\\webprog20fall\\webProgrammingFinalProject\\src\\useProgressCanvas.js":"7","C:\\webprog20fall\\webProgrammingFinalProject\\src\\recommendationPage.js":"8","C:\\webprog20fall\\webProgrammingFinalProject\\src\\axios.js":"9","C:\\webprog20fall\\webProgrammingFinalProject\\src\\customButtonStyle.js":"10"},{"size":500,"mtime":1610625011890,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1610625011891,"results":"13","hashOfConfig":"12"},{"size":15953,"mtime":1611045511275,"results":"14","hashOfConfig":"12"},{"size":2828,"mtime":1611062263517,"results":"15","hashOfConfig":"12"},{"size":1973,"mtime":1610625011889,"results":"16","hashOfConfig":"12"},{"size":2430,"mtime":1611057017800,"results":"17","hashOfConfig":"12"},{"size":2190,"mtime":1611062276696,"results":"18","hashOfConfig":"12"},{"size":14094,"mtime":1611062039587,"results":"19","hashOfConfig":"12"},{"size":2030,"mtime":1610972930772,"results":"20","hashOfConfig":"12"},{"size":301,"mtime":1611043494348,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"18q2kfw",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\webprog20fall\\webProgrammingFinalProject\\src\\index.js",[],["46","47"],"C:\\webprog20fall\\webProgrammingFinalProject\\src\\reportWebVitals.js",[],"C:\\webprog20fall\\webProgrammingFinalProject\\src\\App.js",["48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69"],"import Soundfont from 'soundfont-player'\nimport './App.css'\nimport { useEffect, useRef, useState } from 'react';\nimport ButtonList from './buttonList.js'\nimport RecPage from './recommendationPage.js'\nimport { \n  getInitPiece, \n  composeRequest,\n  downloadSongRequest,\n  rateSongRequest,\n  getRecommendationsRequest\n} from './axios'\nimport { useCanvas, Canvas, myDraw } from './useCanvas.js';\nimport { useGridCanvas, GridCanvas } from './useGridCanvas.js';\nimport { useProgressCanvas, ProgressCanvas, progressDraw, stopProgress } from './useProgressCanvas.js';\n\nimport 'antd/dist/antd.css';\nimport {\n  PlayCircleFilled,\n  PauseCircleFilled,\n  SlidersFilled,\n  RedoOutlined,\n  ArrowRightOutlined,\n  ArrowLeftOutlined,\n  LoadingOutlined,\n  DownloadOutlined,\n  LikeOutlined,\n  LikeFilled,\n  DislikeOutlined,\n  DislikeFilled,\n  CommentOutlined,\n  StarFilled,\n} from '@ant-design/icons';\nimport { Space, Divider, Typography, Spin } from 'antd';\n// import { Button } from '@material-ui/core';\n// import { ActionButton } from './customButtonStyle.js'\nimport { \n  PlayArrowRounded,\n  StopRounded,\n  ArrowBackRounded,\n  MusicNoteRounded\n} from '@material-ui/icons'\n\nconst { Title, Text } = Typography;\n\n\nlet ac, pianoPlayer, timeOutButt, timeOutButt2=[], timeOutButt3=[];\nfunction App() {\n  /***** Result Page *****/\n  const [originPage, setOriginPage] = useState(true)\n  const [recommendationPage, setRecommendationPage] = useState(false)\n  const [recommandProps, setRecommendationProps] = useState()\n\n  const requestRecommendations = async()=>{\n    let result = await getRecommendationsRequest(refId, composedId);\n    //console.log(result.n_results, result.composed_id, result.recommended_songs)\n    setRecommendationProps(result)\n    setRecommendationPage(true)\n  }\n\n  /***** Audio Playing *****/\n  const [initNotes, setInitNotes] = useState([])\n  const [composedNotes, setComposedNotes] = useState([])\n  const [isPlayingInit, setIsPlayingInit] = useState(false)\n  const [isPlayingComposed, setIsPlayingComposed] = useState(false)\n\n  const tick2Sec = (tic, tpb = 480) => {\n    return parseFloat(60*tic/tempo/tpb);\n  }\n  \n  const midi2Play = e => {\n    return {\n      time: tick2Sec(e.start_tick),\n      note: e.key,\n      gain: 5*e.velocity/128,\n      duration: tick2Sec(e.duration)\n    }\n  }\n\n  const midi2Progress = e => {\n    return {\n      //for clock\n      time: tick2Sec(e.start_tick),\n      duration: tick2Sec(e.duration),\n      \n      key: e.key - 20, // [myRef]\n      gain: e.velocity/128,\n      //for draw\n      start: Math.floor(e.start_tick/120),\n      end: Math.floor(e.duration/120)\n    }\n  }\n\n  const myPlayer = (player, notes, setFunc) => {\n    return new Promise((resolve) => {\n      const noteSched = notes.map(midi2Play)\n      const noteProgress = notes.map(midi2Progress)\n      const timeoutSec = 1000 * (noteSched[ noteSched.length - 1 ].time + noteSched[ noteSched.length - 1 ].duration);\n\n      player.schedule(ac.currentTime, noteSched)\n      progressDraw(noteProgress, timeOutButt2, timeOutButt3);\n      \n      timeOutButt = setTimeout(() => {\n       setFunc(false)\n       progressClear()\n       resolve()\n      }, timeoutSec)\n    })\n  }\n\n  const playButton = (tag) => {\n    return async() => {\n      const isPlaying = (tag === \"i\")? isPlayingInit : isPlayingComposed\n      const notes = (tag === \"i\")? initNotes : composedNotes\n      const setFunc = (tag === \"i\")?\n        ele => {setIsPlayingInit(ele)} :\n        ele => {setIsPlayingComposed(ele)}\n\n      if(isPlaying){\n        pianoPlayer.stop()\n        setFunc(false)\n\n        clearTimeout(timeOutButt)\n        timeOutButt2.forEach(e=>{clearTimeout(e)})\n        timeOutButt3.forEach(e=>{clearTimeout(e)})\n        progressClear()\n      }\n      else{\n        setFunc(true)\n        await myPlayer(pianoPlayer, notes, setFunc)\n      }\n    }\n  }\n\n  useEffect( async () => {\n    ac = new window.AudioContext();\n    pianoPlayer = await Soundfont.instrument(ac, 'acoustic_grand_piano', { soundfont: 'MusyngKite' });\n  }, [])\n\n  /***** Button  List  React *****/\n  const [polyph, setPolyph] = useState([0, 0, 0, 0, 0, 0, 0, 0])\n  const [rhythm, setRhythm] = useState([0, 0, 0, 0, 0, 0, 0, 0])\n  const [composedPolyph, setComposedPolyph] = useState([0, 0, 0, 0, 0, 0, 0, 0])\n  const [composedRhythm, setComposedRhythm] = useState([0, 0, 0, 0, 0, 0, 0, 0])\n  const [defaultPR, setDefaultPR] = useState([])\n  const [pLock, setPLock] = useState(true)\n  const [rLock, setRLock] = useState(true)\n  const [isLike, setIsLike] = useState(false)\n  const [isDisLike, setIsDisLike] = useState(false)\n  const [likeCount, setLikeCount] = useState(0)\n  const [disLikeCount, setDisLikeCount] = useState(0)\n\n  const pressLikeButt = async(flag)=>{\n    let deltaLike = 0, deltaDisLike = 0;\n    if(flag){//press like button\n      deltaLike = isLike? -1 : 1;\n      deltaDisLike = isDisLike? -1 : 0;\n      setIsLike(!isLike)\n      setIsDisLike(false)\n    }\n    else{\n      deltaLike = isLike? -1 : 0;\n      deltaDisLike = isDisLike? -1 : 1;\n      setIsDisLike(!isDisLike)\n      setIsLike(false)\n    }\n    //console.log(composedId, deltaLike, deltaDisLike)\n    let result = await rateSongRequest(composedId, deltaLike, deltaDisLike)\n    //console.log(result);\n    setLikeCount(result.likes)\n    setDisLikeCount(result.dislikes)\n  }\n\n  const defaultToggleFunc = () => {\n    setPolyph(defaultPR[0])\n    setRhythm(defaultPR[1])\n  }\n\n  const toggleFunc = (index, op, typ) => {\n    return (() => {\n      (typ === \"polyph\")?\n        pLock?\n          setPolyph(polyph.map(ele => (ele + op))) :\n          setPolyph(polyph.map((ele, ind) => ((ind === index)? ele + op : ele)))\n        :\n        rLock?\n          setRhythm(rhythm.map(ele => (ele + op))) :\n          setRhythm(rhythm.map((ele, ind) => ((ind === index)? ele + op : ele)))\n    })\n  }\n\n  const pLockFunc = () => {\n    if(pLock){\n      setPolyph(polyph.map(ele => Math.max(Math.min(ele, 7), 0)))\n    }\n    setPLock(!pLock) \n  }\n\n  const rLockFunc = () => {\n    if(rLock){\n      setRhythm(rhythm.map(ele => Math.max(Math.min(ele, 7), 0)))\n    }\n    setRLock(!rLock)\n  }\n\n  /***** Webserver requests *****/\n  const [hasRequested, setHasRequested] = useState(false)\n  const [refId, setRefId] = useState(-1)\n  const [composedId, setComposedId] = useState('');\n  const [tempo, setTempo] = useState(120)\n  const [isComposing, setIsComposing] = useState(false)\n  const [hasComposed, setHasComposed] = useState(false)\n\n  useEffect( async () => {\n    if(!hasRequested){\n      setHasRequested(true);\n      ac = new window.AudioContext();\n      pianoPlayer = await Soundfont.instrument(ac, 'acoustic_grand_piano', { soundfont: 'MusyngKite' });\n      let initPiece = await getInitPiece();\n      setTempo(initPiece.tempo);\n      setRefId(initPiece.ref_id);\n      setInitNotes(initPiece.notes);\n      setPolyph(initPiece.attr_cls.polyph);\n      setRhythm(initPiece.attr_cls.rhythm);\n      setDefaultPR([initPiece.attr_cls.polyph, initPiece.attr_cls.rhythm])\n    }\n  }, [hasRequested])\n\n  const composeFunc = async () => {\n    setIsComposing(true);\n    let composedPiece = await composeRequest(\n      refId, tempo, {\n        polyph: polyph.map(e=>Math.max(Math.min(e, 7), 0)),\n        rhythm: rhythm.map(e=>Math.max(Math.min(e, 7), 0))\n      }\n    );\n    setComposedNotes(composedPiece.notes);\n    setComposedRhythm(composedPiece.rhythm);\n    setComposedPolyph(composedPiece.polyph);\n    setComposedId(composedPiece.composed_id);\n    setIsComposing(false);\n    setHasComposed(true);\n  }\n\n  /***** Canvas render *****/\n  const [ canvasRef, canvasWidth, canvasHeight, gridSize, nGrids, nPitch, n_bars, n_grids_per_bar, window_width, window_height] = useCanvas();\n  const [ gridCanvasRef ] = useGridCanvas(recommendationPage);\n  const [ progressCanvasRef, progressDraw, progressClear] = useProgressCanvas();\n\n  const midi2Show = e => {\n    return {\n      start: Math.floor(e.start_tick/120),\n      key: e.key - 20, // [myRef]\n      gain: e.velocity/128,\n      duration: Math.floor(e.duration/120)\n    }\n  }\n\n  useEffect( async () => {\n    if(originPage){\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      let notes = initNotes.map(midi2Show);\n      myDraw(canvasHeight, nGrids, nPitch, gridSize, notes, ctx);\n    }\n    else if(!recommendationPage){\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      let notes = composedNotes.map(midi2Show);\n      myDraw(canvasHeight, nGrids, nPitch, gridSize, notes, ctx);\n    }\n  }, [initNotes, canvasHeight, canvasWidth, originPage])\n\n  const passedRhythm = (originPage)? rhythm : composedRhythm;\n  const passedPolyph = (originPage)? polyph : composedPolyph;\n\n  const initEverything = ()=>{\n    setInitNotes([])\n    setRefId(-1)\n    setPolyph(polyph.map(e=>0))\n    setRhythm(rhythm.map(e=>0))\n    setOriginPage(true)\n    setHasRequested(false)\n    setHasComposed(false)\n    setIsLike(false)\n    setIsDisLike(false)\n    setRecommendationPage(false)\n  }\n\n  const buttonSize = Math.min(Math.floor(canvasHeight*0.12), 50)\n  \n  return (\n    <div className=\"App\">\n      <body className=\"App-header\">\n        {recommendationPage?\n          <RecPage \n            id={recommandProps.composed_id}\n            recommendations={recommandProps.recommended_songs}\n            composedSong={{\n              tempo:tempo, notes:composedNotes, composed_id:recommandProps.composed_id,\n              dislikes:disLikeCount, likes:likeCount, downloads:0, ranking:-1\n            }}\n            n_results={recommandProps.n_results}\n            goback={()=>initEverything()}\n            likeStatus={isLike}\n          />\n          :\n          <>\n            <div style={{position: \"relative\", width:window_width, height:(canvasHeight+0.1*window_height)}}>\n              {originPage?\n                <div id=\"info-container\" style={{overflow:'hidden', width:0.8 * (window_width - canvasWidth), height:canvasHeight}}>\n                  <div className='id-container'>\n                    <Text strong style={{fontSize:buttonSize*0.6,  color:'CornflowerBlue'}}>Original</Text>\n                    <br/>\n                    <Text strong style={{fontSize:buttonSize*0.5, color:'DarkCyan'}}> Song&nbsp;{(refId == -1)? '' : refId} </Text>\n                  </div>\n                  <div id=\"play\">\n                    <button className=\"my-button1\" style={{fontSize: buttonSize ,color: isPlayingInit? 'lightpink':'aquamarine'}} \n                      onClick={playButton(\"i\")} disabled={refId===-1}>\n                      {isPlayingInit? \n                      <PauseCircleFilled title=\"Pause\"/> : \n                      <PlayCircleFilled title=\"Play\"/>}\n                      </button>\n                    </div>\n                  <div id=\"back2default\">\n                    <button className=\"my-button1 color3\" style={{fontSize: buttonSize}} onClick={defaultToggleFunc}>\n                      <RedoOutlined title=\"Set Tuners to Default\"/>\n                      </button>\n                    </div>\n                  <div id=\"request\">\n                      <button \n                        className={isComposing ? \"my-button1 color1 spinner\" : \"my-button1 color1\"}\n                        style={{fontSize: buttonSize}}\n                        onClick={composeFunc} \n                        disabled={isComposing}\n                      >\n                        {/* <SlidersFilled title={hasComposed? \"Recompose\":\"Compose\"}/>  */}\n                        <MusicNoteRounded style={{fontSize: buttonSize}} titleAccess={isComposing? \"Composing...\" : hasComposed? \"Recompose\" : \"Compose\"}/>\n                      </button>\n                  </div>\n                  { hasComposed && !isComposing &&\n                    <div id=\"nextpage\">\n                      <button className=\"my-button1 color2\"\n                        onClick={()=>setOriginPage(false)}\n                        style={{fontSize: buttonSize}}\n                        disabled={isPlayingInit}>\n                        <ArrowRightOutlined title=\"See My Song\"/>\n                      </button>\n                    </div>\n                  }\n                </div>\n                :\n                <div id=\"info-container\" style={{overflow:'hidden', width:0.8 * (window_width - canvasWidth), height:canvasHeight}}>\n                  <div className='id-container'>\n                    <Text strong style={{fontSize:buttonSize*0.6,  color:'CornflowerBlue'}}>Yours</Text>\n                    <br/>\n                    <Text strong style={{fontSize:buttonSize*0.5,  color:'DarkCyan'}}>Song&nbsp;{(refId == -1)? '' : refId}</Text>\n                  </div>\n                  <div id=\"play\">\n                    <button className=\"my-button1\" style={{fontSize: buttonSize, color: isPlayingComposed? 'lightpink':'aquamarine'}} onClick={playButton(\"c\")}>\n                      {(isPlayingComposed)? \n                      <PauseCircleFilled title=\"Pause\"/> : \n                      <PlayCircleFilled title=\"Play\"/>}\n                    </button>\n                  </div>\n                  <Space>\n                    <button \n                      className=\"my-button1 color3\" \n                      style={{fontSize: buttonSize, color: isLike? 'greenyellow' : 'grey'}}\n                      onClick={() => pressLikeButt(true)}>\n                      {isLike? <LikeFilled title='Cancel Like'/> : <LikeOutlined title='Like'/>}\n                    </button>\n                    <button \n                      className=\"my-button1 color3\"\n                      style={{fontSize: buttonSize, color: isDisLike? 'red' : 'grey'}}\n                      onClick={() => pressLikeButt(false)}>\n                      {isDisLike? <DislikeFilled title='Cancel Dislike'/> : <DislikeOutlined title='Dislike'/>}\n                    </button>\n                  </Space>\n                  <div id=\"recommand\">\n                    <button \n                      className=\"my-button1 color1\"\n                      style={{fontSize: buttonSize}}\n                      onClick={() => requestRecommendations()}\n                      disabled={!(isLike||isDisLike) || isPlayingComposed}>\n                      <StarFilled title={(isLike||isDisLike)?\"Recommendations\":\"Like or dislike to get recommendations :)\"}/>\n                    </button>\n                  </div>\n                  <div id=\"prevpage\">\n                    <button \n                      className=\"my-button1 color2\"\n                      style={{fontSize: buttonSize}}\n                      onClick={()=>setOriginPage(true)}\n                      disabled={isPlayingComposed}\n                    >\n                      <ArrowLeftOutlined title=\"See Original Song\"/>\n                    </button>\n                  </div>\n                </div>           \n              }\n            <Canvas\n              forwardedRef={canvasRef}\n              width={canvasWidth}\n              height={canvasHeight}\n              />\n            <GridCanvas\n              forwardedRef={gridCanvasRef}\n              width={canvasWidth}\n              height={canvasHeight}\n              />\n            <ProgressCanvas\n              forwardedRef={progressCanvasRef}\n              width={canvasWidth}\n              height={canvasHeight}\n            />\n            </div>\n            <Space direction='vertical' style={{width:window_width}}>\n              <ButtonList \n                toggleFunc={toggleFunc} lockFunc={rLockFunc} \n                locked={rLock} attrData={passedRhythm}\n                windowWidth={window_width} canvasWidth={canvasWidth}\n                nowAPage={originPage}\n                attrType=\"rhythm\"/>\n              <ButtonList \n                toggleFunc={toggleFunc} lockFunc={pLockFunc}\n                locked={pLock} attrData={passedPolyph}\n                windowWidth={window_width} canvasWidth={canvasWidth}\n                nowAPage={originPage}\n                attrType=\"polyph\"/>\n            </Space>\n          </>\n        }\n      </body>\n    </div>\n  );\n}\n\nexport default App;","C:\\webprog20fall\\webProgrammingFinalProject\\src\\useCanvas.js",["70","71"],"C:\\webprog20fall\\webProgrammingFinalProject\\src\\buttonList.js",["72","73","74"],"import 'antd/dist/antd.css';\nimport { Button, Switch, Typography, Space, Divider } from 'antd';\nimport {\n  UnlockOutlined,\n  LockOutlined,\n  RightCircleOutlined,\n  LeftCircleOutlined,\n} from '@ant-design/icons';\nconst { Text } = Typography;\n\nfunction ButtonList(props){\n  return(\n    <div style={{display:'flex'}}>\n        <div style={{ width: 0.8*(props.windowWidth-props.canvasWidth) }}>\n          <Switch\n            size=\"small\"\n            checkedChildren={<UnlockOutlined />}\n            unCheckedChildren={<LockOutlined />}\n            defaultChecked={props.locked} \n            onClick={props.lockFunc}/>\n          {props.attrType === 'rhythm'?\n            <Text keyboard strong style={{color:'mediumslateblue'}}>Rhythm</Text> :\n            <Text keyboard strong style={{color:'MediumSeaGreen'}}>Polyph</Text> }\n        </div>\n        <div className=\"button-list\" style={{ width: props.canvasWidth}}>\n          {props.attrData.map((elem, index) => (\n            <div key={`${props.attrType[0]}_${index}`}>\n              <button \n                className=\"my-button2\"\n                onClick={props.toggleFunc(index, -1, props.attrType)}\n                disabled={(!props.nowAPage) || (elem <= 0) || (props.locked && index !== 0)}>\n                  <LeftCircleOutlined title=\"Down\"/>\n              </button>\n              <Text strong code //style={{fontSize:'16px'}}\n                type={\n                  elem>5?\n                    \"danger\":elem<2?\n                      \"success\":\"warning\"\n                }\n              >{Math.max(Math.min(elem, 7), 0)}</Text>\n              <button\n                className=\"my-button2\"\n                onClick={props.toggleFunc(index, +1, props.attrType)}\n                disabled={(!props.nowAPage) || (elem >= 7) || (props.locked && index !== 0)}>\n                  <RightCircleOutlined title=\"Up\"/>\n              </button>\n            </div>\n          ))}\n        </div>\n    </div>   \n  )\n}\n\nexport default ButtonList","C:\\webprog20fall\\webProgrammingFinalProject\\src\\useGridCanvas.js",["75","76","77","78","79"],"import React, { useEffect, useRef } from 'react';\nimport { useCanvas } from './useCanvas.js';\n\nexport function draw(ctx, canvasWidth, canvasHeight, gridSize, n_grids_per_bar){\n  const halfGridSize = Math.floor(gridSize/2);\n  ctx.save();\n  ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n  \n  for(let i = 0; i < canvasHeight; i++){\n    let flag = Math.floor(i/halfGridSize)%12;\n    ctx.restore();\n    ctx.globalAlpha = 1;\n    if(flag === 1 || flag === 3 || flag === 6 || flag === 8 || flag === 10){\n      ctx.fillStyle = 'rgba(30, 30, 30, 1)';\n      ctx.fillRect(0, i, canvasWidth, 1);\n    }\n    else{\n      ctx.fillStyle = 'rgba(60, 60, 60, 1)';\n      ctx.fillRect(0, i, canvasWidth, 1);\n    }\n  }\n\n  ctx.beginPath();\n  for (let i = 0; i < canvasWidth; i += gridSize) {\n    ctx.lineWidth = 1.2;\n    if ((i/gridSize%n_grids_per_bar)===0)\n      ctx.strokeStyle = 'white';\n    else\n      continue; //ctx.strokeStyle = '#717171';\n    ctx.beginPath();\n    ctx.moveTo(i + 0.5, 0);\n    ctx.lineTo(i + 0.5, canvasHeight);\n    ctx.stroke();\n  }\n  ctx.strokeStyle = 'white'\n  ctx.lineWidth = 1.2;    \n  ctx.beginPath();\n  ctx.moveTo(canvasWidth - 0.6, 0);\n  ctx.lineTo(canvasWidth - 0.6, canvasHeight);\n  ctx.stroke();\n\n  for (let i = 0; i < canvasHeight; i += halfGridSize) {\n    ctx.lineWidth = (1.0+((i/halfGridSize%12)===4)*5)*0.1; // [myRef]\n    if ((i/halfGridSize%12)===3)\n      ctx.strokeStyle = 'gray';\n    else\n      continue; //ctx.strokeStyle = '#717171';'#F5927E'\n    ctx.beginPath();\n    ctx.moveTo(0, i + 0.5);\n    ctx.lineTo(canvasWidth, i + 0.5);\n    ctx.stroke();\n  }\n  ctx.restore();\n};\n\nexport function useGridCanvas(recPage){\n    const canvasRef = useRef(null);\n    const [nullref, canvasWidth, canvasHeight, gridSize, n_grids, n_pitch, n_bars, n_grids_per_bar] = useCanvas();\n    useEffect(()=>{\n      if(!recPage){\n        const canvasObj = canvasRef.current;\n        const ctx = canvasObj.getContext('2d');\n        // clear the canvas area before rendering the coordinates held in state\n        ctx.clearRect( 0,0, canvasWidth, canvasHeight );\n        draw(ctx, canvasWidth, canvasHeight, gridSize, n_grids_per_bar);\n      }\n      \n    }, [canvasWidth, canvasHeight, gridSize, recPage]);\n\n    return [ canvasRef ];\n}\n\nexport function GridCanvas(props) {\n  return (\n    <canvas\n      className=\"grid-canvas my-canvas\"\n      ref={props.forwardedRef}\n      width={props.width}\n      height={props.height}\n    />\n  )\n}\n\n","C:\\webprog20fall\\webProgrammingFinalProject\\src\\useProgressCanvas.js",["80","81","82","83"],"C:\\webprog20fall\\webProgrammingFinalProject\\src\\recommendationPage.js",["84","85","86","87","88","89","90","91","92","93","94"],"C:\\webprog20fall\\webProgrammingFinalProject\\src\\axios.js",[],"C:\\webprog20fall\\webProgrammingFinalProject\\src\\customButtonStyle.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":3,"column":21,"nodeType":"101","messageId":"102","endLine":3,"endColumn":27},{"ruleId":"99","severity":1,"message":"103","line":9,"column":3,"nodeType":"101","messageId":"102","endLine":9,"endColumn":22},{"ruleId":"99","severity":1,"message":"104","line":15,"column":45,"nodeType":"101","messageId":"102","endLine":15,"endColumn":57},{"ruleId":"99","severity":1,"message":"105","line":15,"column":59,"nodeType":"101","messageId":"102","endLine":15,"endColumn":71},{"ruleId":"99","severity":1,"message":"106","line":21,"column":3,"nodeType":"101","messageId":"102","endLine":21,"endColumn":16},{"ruleId":"99","severity":1,"message":"107","line":25,"column":3,"nodeType":"101","messageId":"102","endLine":25,"endColumn":18},{"ruleId":"99","severity":1,"message":"108","line":26,"column":3,"nodeType":"101","messageId":"102","endLine":26,"endColumn":19},{"ruleId":"99","severity":1,"message":"109","line":31,"column":3,"nodeType":"101","messageId":"102","endLine":31,"endColumn":18},{"ruleId":"99","severity":1,"message":"110","line":34,"column":17,"nodeType":"101","messageId":"102","endLine":34,"endColumn":24},{"ruleId":"99","severity":1,"message":"111","line":34,"column":38,"nodeType":"101","messageId":"102","endLine":34,"endColumn":42},{"ruleId":"99","severity":1,"message":"112","line":38,"column":3,"nodeType":"101","messageId":"102","endLine":38,"endColumn":19},{"ruleId":"99","severity":1,"message":"113","line":39,"column":3,"nodeType":"101","messageId":"102","endLine":39,"endColumn":14},{"ruleId":"99","severity":1,"message":"114","line":40,"column":3,"nodeType":"101","messageId":"102","endLine":40,"endColumn":19},{"ruleId":"99","severity":1,"message":"115","line":44,"column":9,"nodeType":"101","messageId":"102","endLine":44,"endColumn":14},{"ruleId":"116","severity":1,"message":"117","line":135,"column":14,"nodeType":"118","endLine":138,"endColumn":4},{"ruleId":"116","severity":1,"message":"117","line":214,"column":14,"nodeType":"118","endLine":227,"endColumn":4},{"ruleId":"99","severity":1,"message":"119","line":246,"column":75,"nodeType":"101","messageId":"102","endLine":246,"endColumn":81},{"ruleId":"99","severity":1,"message":"120","line":246,"column":83,"nodeType":"101","messageId":"102","endLine":246,"endColumn":98},{"ruleId":"116","severity":1,"message":"117","line":259,"column":14,"nodeType":"118","endLine":272,"endColumn":4},{"ruleId":"116","severity":1,"message":"121","line":272,"column":6,"nodeType":"122","endLine":272,"endColumn":56,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":315,"column":105,"nodeType":"126","messageId":"127","endLine":315,"endColumn":107},{"ruleId":"124","severity":1,"message":"125","line":357,"column":105,"nodeType":"126","messageId":"127","endLine":357,"endColumn":107},{"ruleId":"99","severity":1,"message":"128","line":1,"column":27,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},{"ruleId":"99","severity":1,"message":"129","line":15,"column":7,"nodeType":"101","messageId":"102","endLine":15,"endColumn":14},{"ruleId":"99","severity":1,"message":"130","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":16},{"ruleId":"99","severity":1,"message":"131","line":2,"column":38,"nodeType":"101","messageId":"102","endLine":2,"endColumn":43},{"ruleId":"99","severity":1,"message":"110","line":2,"column":45,"nodeType":"101","messageId":"102","endLine":2,"endColumn":52},{"ruleId":"99","severity":1,"message":"132","line":58,"column":12,"nodeType":"101","messageId":"102","endLine":58,"endColumn":19},{"ruleId":"99","severity":1,"message":"133","line":58,"column":58,"nodeType":"101","messageId":"102","endLine":58,"endColumn":65},{"ruleId":"99","severity":1,"message":"134","line":58,"column":67,"nodeType":"101","messageId":"102","endLine":58,"endColumn":74},{"ruleId":"99","severity":1,"message":"119","line":58,"column":76,"nodeType":"101","messageId":"102","endLine":58,"endColumn":82},{"ruleId":"116","severity":1,"message":"135","line":68,"column":8,"nodeType":"122","endLine":68,"endColumn":54,"suggestions":"136"},{"ruleId":"99","severity":1,"message":"137","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"128","line":1,"column":27,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},{"ruleId":"99","severity":1,"message":"138","line":6,"column":11,"nodeType":"101","messageId":"102","endLine":6,"endColumn":18},{"ruleId":"99","severity":1,"message":"139","line":6,"column":20,"nodeType":"101","messageId":"102","endLine":6,"endColumn":31},{"ruleId":"99","severity":1,"message":"100","line":3,"column":21,"nodeType":"101","messageId":"102","endLine":3,"endColumn":27},{"ruleId":"99","severity":1,"message":"140","line":19,"column":3,"nodeType":"101","messageId":"102","endLine":19,"endColumn":15},{"ruleId":"99","severity":1,"message":"111","line":21,"column":38,"nodeType":"101","messageId":"102","endLine":21,"endColumn":42},{"ruleId":"99","severity":1,"message":"130","line":22,"column":10,"nodeType":"101","messageId":"102","endLine":22,"endColumn":16},{"ruleId":"116","severity":1,"message":"117","line":81,"column":14,"nodeType":"118","endLine":84,"endColumn":4},{"ruleId":"99","severity":1,"message":"141","line":98,"column":11,"nodeType":"101","messageId":"102","endLine":98,"endColumn":19},{"ruleId":"116","severity":1,"message":"142","line":143,"column":3,"nodeType":"101","endLine":143,"endColumn":12,"suggestions":"143"},{"ruleId":"116","severity":1,"message":"117","line":143,"column":14,"nodeType":"118","endLine":158,"endColumn":4},{"ruleId":"144","severity":1,"message":"145","line":184,"column":13,"nodeType":"146","endLine":184,"endColumn":79},{"ruleId":"144","severity":1,"message":"145","line":236,"column":17,"nodeType":"146","endLine":236,"endColumn":87},{"ruleId":"144","severity":1,"message":"145","line":298,"column":15,"nodeType":"146","endLine":298,"endColumn":85},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'downloadSongRequest' is defined but never used.","'progressDraw' is defined but never used.","'stopProgress' is defined but never used.","'SlidersFilled' is defined but never used.","'LoadingOutlined' is defined but never used.","'DownloadOutlined' is defined but never used.","'CommentOutlined' is defined but never used.","'Divider' is defined but never used.","'Spin' is defined but never used.","'PlayArrowRounded' is defined but never used.","'StopRounded' is defined but never used.","'ArrowBackRounded' is defined but never used.","'Title' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'n_bars' is assigned a value but never used.","'n_grids_per_bar' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'canvasRef', 'composedNotes', 'gridSize', 'nGrids', 'nPitch', and 'recommendationPage'. Either include them or remove the dependency array.","ArrayExpression",["149"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'colors1' is assigned a value but never used.","'Button' is defined but never used.","'Space' is defined but never used.","'nullref' is assigned a value but never used.","'n_grids' is assigned a value but never used.","'n_pitch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'n_grids_per_bar'. Either include it or remove the dependency array.",["150"],"'useState' is defined but never used.","'noneRef' is assigned a value but never used.","'canvasWidth' is assigned a value but never used.","'HomeOutlined' is defined but never used.","'songData' is assigned a value but never used.","React Hook useEffect contains a call to 'setMyImg'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [myImg.length, canvasRef, props.n_results, props.composedSong.notes, props.recommendations, canvasHeight, nGrids, nPitch, gridSize] as a second argument to the useEffect Hook.",["151"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"Update the dependencies array to be: [initNotes, canvasHeight, canvasWidth, originPage, recommendationPage, canvasRef, nGrids, nPitch, gridSize, composedNotes]",{"range":"158","text":"159"},"Update the dependencies array to be: [canvasWidth, canvasHeight, gridSize, recPage, n_grids_per_bar]",{"range":"160","text":"161"},"Add dependencies array: [myImg.length, canvasRef, props.n_results, props.composedSong.notes, props.recommendations, canvasHeight, nGrids, nPitch, gridSize]",{"range":"162","text":"163"},[8470,8520],"[initNotes, canvasHeight, canvasWidth, originPage, recommendationPage, canvasRef, nGrids, nPitch, gridSize, composedNotes]",[2153,2199],"[canvasWidth, canvasHeight, gridSize, recPage, n_grids_per_bar]",[5254,5254],", [myImg.length, canvasRef, props.n_results, props.composedSong.notes, props.recommendations, canvasHeight, nGrids, nPitch, gridSize]"]