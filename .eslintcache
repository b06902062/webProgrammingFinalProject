[{"C:\\Users\\ht940\\Desktop\\web_programming\\finalProject\\webProgrammingFinalProject\\src\\index.js":"1","C:\\Users\\ht940\\Desktop\\web_programming\\finalProject\\webProgrammingFinalProject\\src\\reportWebVitals.js":"2","C:\\Users\\ht940\\Desktop\\web_programming\\finalProject\\webProgrammingFinalProject\\src\\App.js":"3","C:\\Users\\ht940\\Desktop\\web_programming\\finalProject\\webProgrammingFinalProject\\src\\useProgressCanvas.js":"4","C:\\Users\\ht940\\Desktop\\web_programming\\finalProject\\webProgrammingFinalProject\\src\\useGridCanvas.js":"5","C:\\Users\\ht940\\Desktop\\web_programming\\finalProject\\webProgrammingFinalProject\\src\\buttonList.js":"6","C:\\Users\\ht940\\Desktop\\web_programming\\finalProject\\webProgrammingFinalProject\\src\\useCanvas.js":"7","C:\\Users\\ht940\\Desktop\\web_programming\\finalProject\\webProgrammingFinalProject\\src\\axios.js":"8"},{"size":517,"mtime":1609951679434,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1609951679435,"results":"11","hashOfConfig":"10"},{"size":11282,"mtime":1610624575383,"results":"12","hashOfConfig":"10"},{"size":2258,"mtime":1610546694704,"results":"13","hashOfConfig":"10"},{"size":2312,"mtime":1610621923856,"results":"14","hashOfConfig":"10"},{"size":2026,"mtime":1610624892983,"results":"15","hashOfConfig":"10"},{"size":2650,"mtime":1610621814298,"results":"16","hashOfConfig":"10"},{"size":1281,"mtime":1609951679432,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"13q5p3",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\ht940\\Desktop\\web_programming\\finalProject\\webProgrammingFinalProject\\src\\index.js",[],["38","39"],"C:\\Users\\ht940\\Desktop\\web_programming\\finalProject\\webProgrammingFinalProject\\src\\reportWebVitals.js",[],"C:\\Users\\ht940\\Desktop\\web_programming\\finalProject\\webProgrammingFinalProject\\src\\App.js",["40","41","42","43","44","45","46","47","48","49","50","51","52"],"C:\\Users\\ht940\\Desktop\\web_programming\\finalProject\\webProgrammingFinalProject\\src\\useProgressCanvas.js",["53","54","55","56"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { useCanvas } from './useCanvas.js';\r\n\r\nexport function useProgressCanvas(){\r\n  const canvasRef = useRef(null);\r\n  const [ noneRef, canvasWidth, canvasHeight, gridSize, n_grids, nPitch] = useCanvas();\r\n  \r\n  function progressClear(){\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const halfGridSize = Math.floor(gridSize/2);\r\n    ctx.restore();\r\n    ctx.beginPath();\r\n    ctx.clearRect(0, 0, gridSize * n_grids, halfGridSize * nPitch);\r\n    ctx.closePath();\r\n  }\r\n\r\n  async function progressDraw(notes, timeOutButt, timeOutButt2) {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const halfGridSize = Math.floor(gridSize/2);\r\n    const colors = [\r\n      'aqua', 'cornflowerblue', 'lightblue', 'lightcyan',\r\n      'darksalmon', 'coral', 'lightslamon', 'orange',\r\n      'orangered', 'tomato', 'sandybrown', 'peru'\r\n    ]\r\n    ctx.restore();\r\n    ctx.beginPath();\r\n    ctx.clearRect(0, 0, gridSize * n_grids, halfGridSize * nPitch)\r\n    \r\n    const drawOneNote = (elem) => {\r\n      ctx.restore();\r\n      ctx.fillStyle = colors[elem.key%12];\r\n      ctx.globalAlpha = 1;\r\n      ctx.fillRect(elem.start * gridSize, canvasHeight - elem.key * halfGridSize, (elem.end-0.5) * gridSize, halfGridSize);\r\n    }\r\n\r\n    const clearOneNote = (elem) =>{\r\n      ctx.restore();\r\n      ctx.clearRect(elem.start * gridSize, canvasHeight - elem.key * halfGridSize, (elem.end-0.5) * gridSize, halfGridSize);\r\n    }\r\n\r\n    notes.forEach((elem, index)=>{\r\n      timeOutButt[index] = setTimeout(()=>{\r\n        drawOneNote(elem, 1);\r\n        timeOutButt2[index] = setTimeout(()=>{\r\n          //console.log('index = ', index, 'finish time = ', elem.time+elem.duration)\r\n          clearOneNote(elem)\r\n        },elem.duration*1000)\r\n      }, elem.time*1000);\r\n    })\r\n    \r\n    // ctx.clearRect(0, 0, gridSize * n_grids, halfGridSize * nPitch)\r\n    ctx.closePath();\r\n  }\r\n\r\n  return [ canvasRef, progressDraw, progressClear ];\r\n}\r\n\r\nexport function ProgressCanvas(props) {\r\n  return (\r\n    <canvas\r\n      className=\"grid-canvas my-canvas\"\r\n      ref={props.forwardedRef}\r\n      width={props.width}\r\n      height={props.height}\r\n    />\r\n  )\r\n}","C:\\Users\\ht940\\Desktop\\web_programming\\finalProject\\webProgrammingFinalProject\\src\\useGridCanvas.js",["57","58","59","60","61"],"import React, { useEffect, useRef } from 'react';\r\nimport { useCanvas } from './useCanvas.js';\r\n\r\nexport function draw(ctx, canvasWidth, canvasHeight, gridSize, n_grids_per_bar){\r\n  const halfGridSize = Math.floor(gridSize/2);\r\n  ctx.save();\r\n  ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n  \r\n  for(let i = 0; i < canvasHeight; i++){\r\n    let flag = Math.floor(i/halfGridSize)%12;\r\n    ctx.restore();\r\n    ctx.globalAlpha = 1;\r\n    if(flag === 1 || flag === 3 || flag === 6 || flag === 8 || flag === 10){\r\n      ctx.fillStyle = 'rgba(30, 30, 30, 1)';\r\n      ctx.fillRect(0, i, canvasWidth, 1);\r\n    }\r\n    else{\r\n      ctx.fillStyle = 'rgba(60, 60, 60, 1)';\r\n      ctx.fillRect(0, i, canvasWidth, 1);\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  for (let i = 0; i < canvasWidth; i += gridSize) {\r\n    ctx.lineWidth = (1.0+((i/gridSize%n_grids_per_bar)===0)*5)*0.1;\r\n    if ((i/gridSize%n_grids_per_bar)===0)\r\n      ctx.strokeStyle = 'gray';\r\n    else\r\n      continue; //ctx.strokeStyle = '#717171';\r\n    ctx.beginPath();\r\n    ctx.moveTo(i + 0.5, 0);\r\n    ctx.lineTo(i + 0.5, canvasHeight);\r\n    ctx.stroke();\r\n  }\r\n  for (let i = 0; i < canvasHeight; i += halfGridSize) {\r\n    ctx.lineWidth = (1.0+((i/halfGridSize%12)===4)*5)*0.1; // [myRef]\r\n    if ((i/halfGridSize%12)===4)\r\n      ctx.strokeStyle = 'gray';\r\n    else\r\n      continue; //ctx.strokeStyle = '#717171';'#F5927E'\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, i + 0.5);\r\n    ctx.lineTo(canvasWidth, i + 0.5);\r\n    ctx.stroke();\r\n  }\r\n  ctx.restore();\r\n};\r\n\r\nexport function useGridCanvas(){\r\n    const canvasRef = useRef(null);\r\n    const [nullref, canvasWidth, canvasHeight, gridSize, n_grids, n_pitch, n_bars, n_grids_per_bar] = useCanvas();\r\n    useEffect(()=>{\r\n      const canvasObj = canvasRef.current;\r\n      const ctx = canvasObj.getContext('2d');\r\n      // clear the canvas area before rendering the coordinates held in state\r\n      ctx.clearRect( 0,0, canvasWidth, canvasHeight );\r\n\r\n      draw(ctx, canvasWidth, canvasHeight, gridSize, n_grids_per_bar);\r\n    }, [canvasWidth, canvasHeight, gridSize]);\r\n\r\n    return [ canvasRef ];\r\n}\r\n\r\nexport function GridCanvas(props) {\r\n  return (\r\n    <canvas\r\n      className=\"grid-canvas my-canvas\"\r\n      ref={props.forwardedRef}\r\n      width={props.width}\r\n      height={props.height}\r\n    />\r\n  )\r\n}\r\n\r\n","C:\\Users\\ht940\\Desktop\\web_programming\\finalProject\\webProgrammingFinalProject\\src\\buttonList.js",["62","63","64"],"C:\\Users\\ht940\\Desktop\\web_programming\\finalProject\\webProgrammingFinalProject\\src\\useCanvas.js",["65","66"],"import React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\n\r\n/* ========================================================================== */\r\nconst n_grids_per_bar = 16;\r\nconst n_bars = 8;\r\nconst n_grids = n_grids_per_bar * n_bars; // number of grids in horizontal direction\r\nconst n_pitch = 88; // number of grids in vertical direction\r\n/* ========================================================================== */\r\n\r\n/* Change window size when resizing window */\r\nexport function useWindowSize() {\r\n  const [size, setSize] = useState([0, 0]);\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n    window.addEventListener('resize', updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener('resize', updateSize);\r\n  }, []);\r\n  return size;\r\n}\r\n\r\nexport function myDraw(canvasHeight, n_grids, nPitch, gridSize, notes, ctx) {\r\n  const halfGridSize = Math.floor(gridSize/2);\r\n  const colors = [\r\n    'aqua', 'cornflowerblue', 'lightblue', 'lightcyan',\r\n    'darksalmon', 'coral', 'lightslamon', 'orange',\r\n    'orangered', 'tomato', 'sandybrown', 'peru'\r\n  ]\r\n  const colors1 = [\r\n    'mediumorchid', 'paleturqoise', 'salmon', 'mediumseagreen',\r\n    'navajowhite', 'hotpink', 'gold', 'turqoise',\r\n    'violet', 'palegreen', 'tomato', 'skyblue'\r\n  ]\r\n  ctx.restore();\r\n  ctx.beginPath();\r\n  ctx.clearRect(0, 0, gridSize * n_grids, halfGridSize * nPitch)\r\n\r\n  for(let note of notes){\r\n    if(note.key < 0 || note.key >= nPitch){\r\n      continue;\r\n    }\r\n    ctx.restore();\r\n    ctx.fillStyle = colors[note.key%12];\r\n    ctx.globalAlpha = note.gain;\r\n    ctx.fillRect(note.start * gridSize, canvasHeight - note.key * halfGridSize, (note.duration-0.5) * gridSize, halfGridSize);\r\n  }\r\n\r\n  ctx.closePath();\r\n}\r\n\r\nexport function useCanvas(){\r\n    const canvasRef = useRef(null);\r\n    let [window_width, window_height] = useWindowSize();\r\n    // if (window_width > 1000)\r\n    //   window_width -= 100;\r\n    const canvasWidth = 0.8*window_width - 0.8*window_width % n_grids;\r\n    const canvasHeight = Math.floor(canvasWidth / n_grids) * n_pitch/2;\r\n    const gridSize = Math.floor(canvasWidth / n_grids);\r\n    console.log(\"width, height, gridSize of drawCanvas:\", canvasWidth, canvasHeight, gridSize);\r\n\r\n    return [canvasRef, canvasWidth, canvasHeight, gridSize, n_grids, n_pitch, n_bars, n_grids_per_bar, window_width, window_height];\r\n}\r\n\r\nexport function Canvas(props) {\r\n  return (\r\n    <canvas\r\n      className=\"App-canvas my-canvas\"\r\n      ref={props.forwardedRef}\r\n      width={props.width}\r\n      height={props.height}\r\n    />\r\n  )\r\n}\r\n","C:\\Users\\ht940\\Desktop\\web_programming\\finalProject\\webProgrammingFinalProject\\src\\axios.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":3,"column":21,"nodeType":"73","messageId":"74","endLine":3,"endColumn":27},{"ruleId":"71","severity":1,"message":"75","line":8,"column":45,"nodeType":"73","messageId":"74","endLine":8,"endColumn":57},{"ruleId":"71","severity":1,"message":"76","line":8,"column":59,"nodeType":"73","messageId":"74","endLine":8,"endColumn":71},{"ruleId":"71","severity":1,"message":"77","line":19,"column":17,"nodeType":"73","messageId":"74","endLine":19,"endColumn":24},{"ruleId":"71","severity":1,"message":"78","line":19,"column":38,"nodeType":"73","messageId":"74","endLine":19,"endColumn":44},{"ruleId":"71","severity":1,"message":"79","line":20,"column":16,"nodeType":"73","messageId":"74","endLine":20,"endColumn":20},{"ruleId":"80","severity":1,"message":"81","line":106,"column":14,"nodeType":"82","endLine":109,"endColumn":4},{"ruleId":"80","severity":1,"message":"81","line":157,"column":14,"nodeType":"82","endLine":170,"endColumn":4},{"ruleId":"80","severity":1,"message":"83","line":170,"column":6,"nodeType":"84","endLine":170,"endColumn":8,"suggestions":"85"},{"ruleId":"71","severity":1,"message":"86","line":186,"column":75,"nodeType":"73","messageId":"74","endLine":186,"endColumn":81},{"ruleId":"71","severity":1,"message":"87","line":186,"column":83,"nodeType":"73","messageId":"74","endLine":186,"endColumn":98},{"ruleId":"80","severity":1,"message":"81","line":199,"column":14,"nodeType":"82","endLine":212,"endColumn":4},{"ruleId":"80","severity":1,"message":"88","line":212,"column":6,"nodeType":"84","endLine":212,"endColumn":56,"suggestions":"89"},{"ruleId":"71","severity":1,"message":"90","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":25},{"ruleId":"71","severity":1,"message":"91","line":1,"column":27,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"92","line":6,"column":11,"nodeType":"73","messageId":"74","endLine":6,"endColumn":18},{"ruleId":"71","severity":1,"message":"93","line":6,"column":20,"nodeType":"73","messageId":"74","endLine":6,"endColumn":31},{"ruleId":"71","severity":1,"message":"94","line":51,"column":12,"nodeType":"73","messageId":"74","endLine":51,"endColumn":19},{"ruleId":"71","severity":1,"message":"95","line":51,"column":58,"nodeType":"73","messageId":"74","endLine":51,"endColumn":65},{"ruleId":"71","severity":1,"message":"96","line":51,"column":67,"nodeType":"73","messageId":"74","endLine":51,"endColumn":74},{"ruleId":"71","severity":1,"message":"86","line":51,"column":76,"nodeType":"73","messageId":"74","endLine":51,"endColumn":82},{"ruleId":"80","severity":1,"message":"97","line":59,"column":8,"nodeType":"84","endLine":59,"endColumn":45,"suggestions":"98"},{"ruleId":"71","severity":1,"message":"78","line":2,"column":10,"nodeType":"73","messageId":"74","endLine":2,"endColumn":16},{"ruleId":"71","severity":1,"message":"99","line":2,"column":38,"nodeType":"73","messageId":"74","endLine":2,"endColumn":43},{"ruleId":"71","severity":1,"message":"77","line":2,"column":45,"nodeType":"73","messageId":"74","endLine":2,"endColumn":52},{"ruleId":"71","severity":1,"message":"91","line":1,"column":27,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"100","line":31,"column":9,"nodeType":"73","messageId":"74","endLine":31,"endColumn":16},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'progressDraw' is defined but never used.","'stopProgress' is defined but never used.","'Divider' is defined but never used.","'Button' is defined but never used.","'Text' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'hasRequested'. Either include it or remove the dependency array.","ArrayExpression",["103"],"'n_bars' is assigned a value but never used.","'n_grids_per_bar' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'canvasRef', 'composedNotes', 'gridSize', 'nGrids', and 'nPitch'. Either include them or remove the dependency array.",["104"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'noneRef' is assigned a value but never used.","'canvasWidth' is assigned a value but never used.","'nullref' is assigned a value but never used.","'n_grids' is assigned a value but never used.","'n_pitch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'n_grids_per_bar'. Either include it or remove the dependency array.",["105"],"'Space' is defined but never used.","'colors1' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [hasRequested]",{"range":"112","text":"113"},"Update the dependencies array to be: [initNotes, canvasHeight, canvasWidth, originPage, canvasRef, nGrids, nPitch, gridSize, composedNotes]",{"range":"114","text":"115"},"Update the dependencies array to be: [canvasWidth, canvasHeight, gridSize, n_grids_per_bar]",{"range":"116","text":"117"},[5243,5245],"[hasRequested]",[6618,6668],"[initNotes, canvasHeight, canvasWidth, originPage, canvasRef, nGrids, nPitch, gridSize, composedNotes]",[2028,2065],"[canvasWidth, canvasHeight, gridSize, n_grids_per_bar]"]